name: Build and test, upload to PyPI on release

on: [push, pull_request]
env:
  CIBW_TEST_COMMAND: "cd {project} && python -m unittest -vvv"
  CIBW_SKIP: "cp27-* pp27-* cp35-* cp36-*"

jobs:
  build_wheels:
    name: Build wheels on Linux (${{ matrix.wheel_arch }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        wheel_arch: [x86_64, i686, aarch64]
        #wheel_arch: [aarch64]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up QEMU
        if: matrix.wheel_arch == 'aarch64'
        id: qemu
        uses: docker/setup-qemu-action@v1

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BEFORE_BUILD: "yum install -y flex bison libxml2-devel zlib-devel && pip install cmake"
          # && python setup.py build_c_core
          CIBW_ARCHS_LINUX: ${{ matrix.wheel_arch }}
          CIBW_BUILD: "*-manylinux_${{ matrix.wheel_arch }}"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build sdist and test extra dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Cache installed C core
        id: cache-c-core
        uses: actions/cache@v2
        with:
          path: |
            vendor/build
            vendor/install
          key: C-core-${{ runner.os }}-${{ hashFiles('.gitmodules') }}-4

      - name: Install OS dependencies
        if: steps.cache-c-core.outputs.cache-hit != 'true' # Only needed when building the C core
        run:
          sudo apt install ninja-build cmake flex bison

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          python setup.py build_c_core
          python setup.py sdist
          python setup.py install
      - name: Test
        run: |
          pip install numpy scipy pandas networkx
          python -m unittest -vvv
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
